#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&ht LS(Q) Q  &ht LS(W) W  &ht LS(E) E  &ht LS(R) R      &ht LS(T) T    &ht LS(Y) Y  &ht LS(U) U  &ht LS(I) I                     &ht LS(O) O      &ht LS(P) P
&ht LS(A) A  &ht LS(S) S  &ht LS(D) D  &ht LS(F) F      &ht LS(G) G    &ht LS(H) H  &ht LS(J) J  &ht LS(K) K                     &ht LS(L) L      &kp RCTRL
&ht LS(Z) Z  &ht LS(X) X  &ht LS(C) C  &ht LS(V) V      &ht LS(B) B    &ht LS(N) N  &ht LS(M) M  &ht DOUBLE_QUOTES SINGLE_QUOTE  &ht CARET TILDE  &ht RSHFT GRAVE
                                       &kp TAB &lt 3 BACKSPACE  &kp LGUI       &lt 2 ENTER  &lt 1 SPACE
            >;
        };

        NumSym {
            bindings = <
&kp ESC       &ht PERCENT DOLLAR          &ht HASH AT                     &kp EQUAL                               &ht QUESTION EXCLAMATION      &kp KP_N2  &kp KP_NUMBER_0   &kp KP_N1            &kp KP_N3  &kp RALT
&kp CAPSLOCK  &ht BACKSLASH KP_DIVIDE     &ht AMPERSAND ASTERISK          &ht UNDERSCORE MINUS                    &ht PIPE PLUS                 &kp KP_N4  &ht COLON PERIOD  &ht SEMICOLON COMMA  &kp KP_N5  &kp RCTRL
&kp TAB       &ht RIGHT_BRACE LEFT_BRACE  &ht RIGHT_BRACKET LEFT_BRACKET  &ht RIGHT_PARENTHESIS LEFT_PARENTHESIS  &ht GREATER_THAN LESS_THAN    &kp KP_N6  &kp KP_N8         &kp KP_N9            &kp KP_N7  &kp RSHFT
                                      &kp TAB &lt 4 BACKSPACE                         &kp LGUI                      &kp ENTER  &kp SPACE
            >;
        };

        Navigation {
            bindings = <
&kp ESC       &trans                 &kp RG(RS(RA(RC(B))))  &kp RS(RA(RC(RG(Y))))  &trans                   &kp PG_UP      &kp HOME                  &kp UP_ARROW  &kp END                    &kp RALT
&kp CAPSLOCK  &kp RS(RA(RC(RG(A))))  &kp RG(RS(RA(RC(T))))  &kp RG(RS(RA(RC(V))))  &kp RS(RA(RC(RG(F))))    &kp PAGE_DOWN  &kp LEFT                  &kp DOWN      &kp RIGHT                  &kp RCTRL
&kp TAB       &kp RS(RA(RC(RG(X))))  &kp RG(RS(RA(RC(S))))  &kp RG(RS(RA(RC(C))))  &kp RS(RA(RC(RG(M))))    &trans         &kp RS(RG(LEFT_BRACKET))  &trans        &kp RS(RG(RIGHT_BRACKET))  &kp RSHFT
                                        &kp TAB &kp BACKSPACE          &kp RGUI                 &kp ENTER      &kp SPACE
            >;
        };

        Function {
            bindings = <
&kp ESC       &kp LC(LG(Q))  &trans      &trans             &trans             &kp F2     &kp F10      &kp F1   &kp F3  &kp RALT
&kp CAPSLOCK  &trans         &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp F4     &kp F12      &kp F11  &kp F5  &kp RCTRL
&kp TAB       &trans         &kp C_PREV  &kp C_NEXT         &kp C_PLAY         &kp F6     &kp F8       &kp F9   &kp F7  &kp RSHFT
                                        &kp TAB  &kp BACKSPACE      &kp RGUI           &kp ENTER  &lt 4 SPACE
            >;
        };

        VSCode {
            bindings = <
&kp ESC   &kp F2  &kp LS(F12)    &kp F12        &kp LS(LG(BACKSLASH))    &kp LA(UP_ARROW)  &kp LG(L)             &kp LG(LS(ENTER))  &kp LS(LG(K))          &kp RALT
&kp CAPS  &trans  &kp LA(LS(F))  &kp LG(FSLH)   &kp LA(LS(A))            &kp LA(DOWN)      &kp LG(LEFT_BRACKET)  &kp LG(ENTER)      &kp LG(RIGHT_BRACKET)  &kp RCTRL
&kp TAB   &trans  &trans         &trans         &kp LS(LG(P))            &trans            &kp LA(LEFT_ARROW)    &kp LG(D)          &kp LA(RIGHT)          &kp RSHFT
                                 &kp TAB &kp BACKSPACE  &kp LCMD                 &kp ENTER         &kp SPACE
            >;
        };
    };
};
